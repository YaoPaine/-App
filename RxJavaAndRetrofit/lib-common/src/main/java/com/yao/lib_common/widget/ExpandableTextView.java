package com.yao.lib_common.widget;import android.content.Context;import android.content.res.TypedArray;import android.util.AttributeSet;import android.view.View;import android.widget.LinearLayout;import android.widget.TextView;import com.yao.lib_common.R;public class ExpandableTextView extends LinearLayout {    //动画执行的时间，最初显示的行数    private int mDuration, mMaxLines;    private TextView tvExpand, tvSource;    public ExpandableTextView(Context context) {        this(context, null);    }    public ExpandableTextView(Context context, AttributeSet attrs) {        this(context, attrs, 0);    }    public ExpandableTextView(Context context, AttributeSet attrs, int defStyleAttr) {        super(context, attrs, defStyleAttr);        setOrientation(VERTICAL);        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.ExpandableTextView);        mDuration = typedArray.getInteger(R.styleable.ExpandableTextView_duration, 500);        mMaxLines = typedArray.getInteger(R.styleable.ExpandableTextView_maxExpandLines, 4);        typedArray.recycle();    }    //当View及其子View从XML文件中加载完成后会被调用    @Override    protected void onFinishInflate() {        super.onFinishInflate();        tvExpand = findViewById(R.id.id_expand_textview);        tvSource = findViewById(R.id.id_source_textview);        tvExpand.setOnClickListener(new OnClickListener() {            @Override            public void onClick(View v) {            }        });    }    //该方法在计算当前View及其所有子View尺寸大小需求时会被调用    @Override    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {        super.onMeasure(widthMeasureSpec, heightMeasureSpec);    }    //该方法在当前View需要为其子View分配尺寸和位置时会被调用    @Override    protected void onLayout(boolean changed, int l, int t, int r, int b) {        super.onLayout(changed, l, t, r, b);    }    //该方法在当前View尺寸变化时被调用    @Override    protected void onSizeChanged(int w, int h, int oldw, int oldh) {        super.onSizeChanged(w, h, oldw, oldh);    }}